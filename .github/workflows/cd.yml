name: CD 

on:
  push:

env:
  SERVICE: "nestjs-service"
  AWS_REGION: "us-east-1"
  AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID_DEV }}"
  AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}"
  IMAGE_TAG: "${{ secrets.ECR_REGISTRY }}/nestjs-app"
  ECR_REGISTRY: "${{ secrets.ECR_REGISTRY }}"
  IMAGE_LABEL: "${{ github.sha }}"
  ECR_REPOSITORY: "nestjs-app"

jobs:
  login_to_ecr:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

  build:
    runs-on: ubuntu-latest
    needs: login_to_ecr
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: nestjs-app
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker images
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Task Definition ARN without Version
        id: get-task-def-arn
        run: |
          FAMILY_PREFIX="nestjs-task"
          TASK_DEFINITION_ARN=$(aws ecs list-task-definitions --family-prefix $FAMILY_PREFIX --query 'taskDefinitionArns[-1]' --output text)
          TASK_DEFINITION_ARN_NO_VERSION=$(echo $TASK_DEFINITION_ARN | sed 's/:[0-9]*$//')
          echo "TASK_DEFINITION_ARN_NO_VERSION=$TASK_DEFINITION_ARN_NO_VERSION" >> $GITHUB_ENV
  
      - name: Print Task Definition ARN
        run: |
          echo "Task Definition ARN without version: ${{ env.TASK_DEFINITION_ARN_NO_VERSION }}"

      - name: Describe Task Definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.TASK_DEFINITION_ARN_NO_VERSION }} --query 'taskDefinition' > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: nestjs-app
          image: $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: task-definition.json
          service: stepathlon-dev-backend
          cluster: stepathlon-dev
          wait-for-service-stability: true

